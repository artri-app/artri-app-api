version: '3.8'

services:
  artriapp-db:
    restart: unless-stopped
    container_name: "artriapp-db-development"
    image: postgres:16
    environment:
      - POSTGRES_USER=artriapp
      - POSTGRES_PASSWORD=artriapp
      - POSTGRES_DB=artriapp
    volumes:
      - artriapp-db:/var/lib/postgresql/data/
    ports:
      - "5438:5432"
    networks:
      - artriapp-network

  artriapp-cache:
    restart: unless-stopped
    container_name: "artriapp-cache-development"
    image: redis:7
    volumes:
      - artriapp-cache:/data
    ports:
      - "6388:6379"

  artriapp-django:
    restart: unless-stopped
    container_name: "artriapp-development"
    build:
      context: ..
      dockerfile: ./docker/django/django.Dockerfile
      args:
        ENV: local
    entrypoint: ["bash", "./docker/bin/deploy.sh"]
    env_file:
      - ./django/artriapp.env
    volumes:
      - ..:/opt/artriapp/
    depends_on:
      - artriapp-db
      - artriapp-cache
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - artriapp-network

#  artriapp-celery:
#    restart: unless-stopped
#    container_name: "artriapp-celery-development"
#    build:
#      context: ..
#      dockerfile: ./docker/django/django.Dockerfile
#      args:
#        ENV: local
#    env_file:
#      - ./django/artriapp.env
#    command: >
#      sh -c "celery -A artriapp worker --loglevel=INFO -E &
#             celery -A artriapp beat --loglevel=INFO"
#    volumes:
#      - ..:/opt/artriapp/
#    depends_on:
#      - artriapp-db
#      - artriapp-cache

volumes:
  artriapp-db:
  artriapp-cache:
  artriapp-django:
    driver: local

networks:
  artriapp-network:
    driver: bridge
